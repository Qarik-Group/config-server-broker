---
meta:
  name:     (( param "Please name your pipeline" ))
  release:  (( concat meta.name " Release" ))
  target:   (( param "Please identify the name of the target Concourse CI" ))
  pipeline: (( grab meta.name ))

  github:
    uri:          (( concat "git@github.com:" meta.github.owner "/" meta.github.repo ))
    owner:        (( param "Please specify the name of the user / organization that owns the Github repository" ))
    repo:         (( param "Please specify the name of the Github repository" ))
    branch:       master
    private_key:  (( param "Please generate an SSH Deployment Key for this repo and specify it here" ))
  
  go:
    version: 1.14
    module:  (( concat "github.com/" meta.github.owner "/" meta.github.repo ))
    cmd_module: (( grab meta.go.module ))
    binary:  (( grab meta.github.repo ))
    force_static_binary: false
  
  image:
    name: starkandwayne/concourse-go
    tag: (( grab meta.go.version ))

  aws:
    bucket:      (( concat meta.pipeline "-pipeline" ))
    region_name: us-east-1
    access_key: (( param "Please set your AWS Access Key ID" ))
    secret_key: (( param "Please set your AWS Secret Key ID" ))

jobs:
  - name: test
    public: true
    serial: true
    plan:
      - do:
        - { get: git, trigger: true }
        - task: test
          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: (( grab meta.image.name ))
                tag:        (( grab meta.image.tag ))
            inputs:
              - name: git
                path: (( concat "gopath/src/" meta.go.module ))
            run:
              path: (( concat "./gopath/src/" meta.go.module "/ci/scripts/test" ))
              args: []
            params:
              MODULE: (( grab meta.go.module ))
        #on_failure:
        #  put: notify
        #  params:
        #    channel:  (( grab meta.slack.channel ))
        #    username: (( grab meta.slack.username ))
        #    icon_url: (( grab meta.slack.icon ))
        #    text:    '(( concat meta.slack.fail_url " " meta.pipeline ": test job failed" ))'

  - name: minor
    public: true
    plan:
      - do:
        - { get: version, trigger: false, params: {bump: minor} }
        - { put: version,                 params: {file: version/number} }
       # on_failure:
       #   put: notify
       #   params:
       #     channel:  (( grab meta.slack.channel ))
       #     username: (( grab meta.slack.username ))
       #     icon_url: (( grab meta.slack.icon ))
       #     text:    '(( concat meta.slack.fail_url " " meta.pipeline ": minor job failed" ))'
resources:
  - name: git
    type: git
    source:
      uri:         (( grab meta.github.uri ))
      branch:      (( grab meta.github.branch ))
      private_key: (( grab meta.github.private_key ))

  - name: version
    type: semver
    source :
      initial_version:   (( grab meta.initial_version || "0.0.1" ))
      driver:            git
      uri:         (( grab meta.github.uri ))
      branch: version
      file: version
      private_key: (( grab meta.github.private_key ))
